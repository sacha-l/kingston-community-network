{"ast":null,"code":"import _objectWithoutProperties from\"/home/alansky/Dev/KCN/kingston-community-network/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import classNames from'classnames';import FormLabel from'./FormLabel';import FormHint from'./FormHint';var defaultProps={children:null,label:'',labelHidden:false,type:'text',name:undefined,status:'',disabled:false,value:undefined,formGroup:null,hasIcon:null,size:'',placeholder:'',rows:3,hint:null};var Input=function Input(_ref){var className=_ref.className,children=_ref.children,label=_ref.label,labelHidden=_ref.labelHidden,type=_ref.type,name=_ref.name,status=_ref.status,disabled=_ref.disabled,value=_ref.value,formGroup=_ref.formGroup,hasIcon=_ref.hasIcon,size=_ref.size,placeholder=_ref.placeholder,rows=_ref.rows,hint=_ref.hint,props=_objectWithoutProperties(_ref,[\"className\",\"children\",\"label\",\"labelHidden\",\"type\",\"name\",\"status\",\"disabled\",\"value\",\"formGroup\",\"hasIcon\",\"size\",\"placeholder\",\"rows\",\"hint\"]);var wrapperClasses=classNames(formGroup&&formGroup!==''&&(formGroup==='desktop'?'form-group-desktop':'form-group'),hasIcon&&hasIcon!==''&&'has-icon-'+hasIcon);var classes=classNames('form-input',size&&\"form-input-\".concat(size),status&&\"form-\".concat(status),className);var Component=type==='textarea'?'textarea':'input';return/*#__PURE__*/React.createElement(React.Fragment,null,label&&/*#__PURE__*/React.createElement(FormLabel,{labelHidden:labelHidden,id:props.id},label),/*#__PURE__*/React.createElement(\"div\",{className:wrapperClasses},/*#__PURE__*/React.createElement(Component,Object.assign({},props,{type:type!=='textarea'?type:null,className:classes,name:name,disabled:disabled,value:value,placeholder:placeholder,rows:type==='textarea'?rows:null})),children),hint&&/*#__PURE__*/React.createElement(FormHint,{status:status},hint));};Input.defaultProps=defaultProps;export default Input;","map":{"version":3,"sources":["/home/alansky/Dev/KCN/kingston-community-network/website/src/components/elements/Input.js"],"names":["React","classNames","FormLabel","FormHint","defaultProps","children","label","labelHidden","type","name","undefined","status","disabled","value","formGroup","hasIcon","size","placeholder","rows","hint","Input","className","props","wrapperClasses","classes","Component","id"],"mappings":"mMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAmBA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,IADS,CAEnBC,KAAK,CAAE,EAFY,CAGnBC,WAAW,CAAE,KAHM,CAInBC,IAAI,CAAE,MAJa,CAKnBC,IAAI,CAAEC,SALa,CAMnBC,MAAM,CAAE,EANW,CAOnBC,QAAQ,CAAE,KAPS,CAQnBC,KAAK,CAAEH,SARY,CASnBI,SAAS,CAAE,IATQ,CAUnBC,OAAO,CAAE,IAVU,CAWnBC,IAAI,CAAE,EAXa,CAYnBC,WAAW,CAAE,EAZM,CAanBC,IAAI,CAAE,CAba,CAcnBC,IAAI,CAAE,IAda,CAArB,CAiBA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAiBR,IAhBJC,CAAAA,SAgBI,MAhBJA,SAgBI,CAfJhB,QAeI,MAfJA,QAeI,CAdJC,KAcI,MAdJA,KAcI,CAbJC,WAaI,MAbJA,WAaI,CAZJC,IAYI,MAZJA,IAYI,CAXJC,IAWI,MAXJA,IAWI,CAVJE,MAUI,MAVJA,MAUI,CATJC,QASI,MATJA,QASI,CARJC,KAQI,MARJA,KAQI,CAPJC,SAOI,MAPJA,SAOI,CANJC,OAMI,MANJA,OAMI,CALJC,IAKI,MALJA,IAKI,CAJJC,WAII,MAJJA,WAII,CAHJC,IAGI,MAHJA,IAGI,CAFJC,IAEI,MAFJA,IAEI,CADDG,KACC,kLAEJ,GAAMC,CAAAA,cAAc,CAAGtB,UAAU,CAC9Ba,SAAS,EAAIA,SAAS,GAAK,EAA5B,GAAoCA,SAAS,GAAK,SAAd,CAA0B,oBAA1B,CAAiD,YAArF,CAD+B,CAE9BC,OAAO,EAAIA,OAAO,GAAK,EAAxB,EAA+B,YAAcA,OAFd,CAAjC,CAKA,GAAMS,CAAAA,OAAO,CAAGvB,UAAU,CACxB,YADwB,CAExBe,IAAI,uBAAkBA,IAAlB,CAFoB,CAGxBL,MAAM,iBAAYA,MAAZ,CAHkB,CAIxBU,SAJwB,CAA1B,CAOA,GAAMI,CAAAA,SAAS,CAAGjB,IAAI,GAAK,UAAT,CAAsB,UAAtB,CAAmC,OAArD,CACA,mBACE,wCACGF,KAAK,eAAI,oBAAC,SAAD,EAAW,WAAW,CAAEC,WAAxB,CAAqC,EAAE,CAAEe,KAAK,CAACI,EAA/C,EAAoDpB,KAApD,CADZ,cAEE,2BACE,SAAS,CAAEiB,cADb,eAGE,oBAAC,SAAD,kBACMD,KADN,EAEE,IAAI,CAAEd,IAAI,GAAK,UAAT,CAAsBA,IAAtB,CAA6B,IAFrC,CAGE,SAAS,CAAEgB,OAHb,CAIE,IAAI,CAAEf,IAJR,CAKE,QAAQ,CAAEG,QALZ,CAME,KAAK,CAAEC,KANT,CAOE,WAAW,CAAEI,WAPf,CAQE,IAAI,CAAET,IAAI,GAAK,UAAT,CAAsBU,IAAtB,CAA6B,IARrC,GAHF,CAaGb,QAbH,CAFF,CAiBGc,IAAI,eAAI,oBAAC,QAAD,EAAU,MAAM,CAAER,MAAlB,EAA2BQ,IAA3B,CAjBX,CADF,CAqBD,CArDD,CAwDAC,KAAK,CAAChB,YAAN,CAAqBA,YAArB,CAEA,cAAegB,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FormLabel from './FormLabel';\nimport FormHint from './FormHint';\n\nconst propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n  labelHidden: PropTypes.bool,\n  type: PropTypes.oneOf(['textarea', 'text', 'email', 'tel', 'password', 'number', 'search', 'color', 'date', 'time', 'datetime-local']),\n  name: PropTypes.string,\n  status: PropTypes.string,\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  formGroup: PropTypes.string,\n  hasIcon: PropTypes.string,\n  size: PropTypes.string,\n  placeholder: PropTypes.string,\n  rows: PropTypes.number,\n  hint: PropTypes.string\n}\n\nconst defaultProps = {\n  children: null,\n  label: '',\n  labelHidden: false,\n  type: 'text',\n  name: undefined,\n  status: '',\n  disabled: false,\n  value: undefined,\n  formGroup: null,\n  hasIcon: null,\n  size: '',\n  placeholder: '',\n  rows: 3,\n  hint: null\n}\n\nconst Input = ({\n  className,\n  children,\n  label,\n  labelHidden,\n  type,\n  name,\n  status,\n  disabled,\n  value,\n  formGroup,\n  hasIcon,\n  size,\n  placeholder,\n  rows,\n  hint,\n  ...props\n}) => {\n\n  const wrapperClasses = classNames(\n    (formGroup && formGroup !== '') && (formGroup === 'desktop' ? 'form-group-desktop' : 'form-group'),\n    (hasIcon && hasIcon !== '') && 'has-icon-' + hasIcon\n  );\n\n  const classes = classNames(\n    'form-input',\n    size && `form-input-${size}`,\n    status && `form-${status}`,\n    className\n  );\n\n  const Component = type === 'textarea' ? 'textarea' : 'input';\n  return (\n    <>\n      {label && <FormLabel labelHidden={labelHidden} id={props.id}>{label}</FormLabel>}\n      <div\n        className={wrapperClasses} \n      >\n        <Component \n          {...props}\n          type={type !== 'textarea' ? type : null}\n          className={classes}\n          name={name}\n          disabled={disabled}\n          value={value}\n          placeholder={placeholder}\n          rows={type === 'textarea' ? rows : null}\n        />\n        {children}\n      </div>\n      {hint && <FormHint status={status}>{hint}</FormHint>}\n    </>\n  );\n}\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}